<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="0" failures="3" hostname="MAA-5CG7362LSW" name="pytest" skipped="0" tests="3" time="0.047" timestamp="2020-01-03T13:29:14.564530"><testcase classname="test_sample1" file="test_sample1.py" line="10" name="test_double" time="0.000"><failure message="AssertionError: double function testcase 2 failed
assert 40 == 38
  -40
  +38">def test_double():
        assert double(19) == 38, &apos;double function testcase 1 failed&apos;
&gt;       assert double(20) == 38, &apos;double function testcase 2 failed&apos;
E       AssertionError: double function testcase 2 failed
E       assert 40 == 38
E         -40
E         +38

test_sample1.py:13: AssertionError</failure></testcase><testcase classname="test_sample1" file="test_sample1.py" line="15" name="test_file1_method1" time="0.000"><failure message="AssertionError: test failed because x=5 y=6
assert 5 == 6
  -5
  +6">@pytest.mark.set1
    def test_file1_method1():
        x=5
        y=6
        assert x+1 == y, &apos;test failed&apos;
&gt;       assert x == y,&quot;test failed because x=&quot; + str(x) + &quot; y=&quot; + str(y)
E       AssertionError: test failed because x=5 y=6
E       assert 5 == 6
E         -5
E         +6

test_sample1.py:21: AssertionError</failure></testcase><testcase classname="test_sample1" file="test_sample1.py" line="22" name="test_file1_method2" time="0.000"><failure message="AssertionError: test failed
assert 7 == 6
  -7
  +6">@pytest.mark.set2
    def test_file1_method2():
        x = 5
        y = 6
        assert x + 1 == y, &apos;test failed&apos;
&gt;       assert x + 2 == y, &apos;test failed&apos;
E       AssertionError: test failed
E       assert 7 == 6
E         -7
E         +6

test_sample1.py:28: AssertionError</failure></testcase></testsuite></testsuites>